<Application x:Class="ProjectTile.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>        
        
        <!-- Main Colours -->
        <Color x:Key="PtColorMenuBlue" R="160"  G="200" B="253"  A="255"/>
        <SolidColorBrush x:Key="PtBrushMenuBlue" Color="{StaticResource PtColorMenuBlue}"/>
        
        <Color x:Key="PtColorHeaderBlue" R="149" G="175" B="220" A="255"/>
        <SolidColorBrush x:Key="PtBrushHeaderBlue" Color="{StaticResource PtColorHeaderBlue}"/>

        <Color x:Key="PtColorFrameBlue" R="193" G="217" B="251" A="255"/>
        <SolidColorBrush x:Key="PtBrushFrameBlue" Color="{StaticResource PtColorFrameBlue}"/>

        <Color x:Key="PtColorBackgroundBlue" R="246" G="249" B="255" A="255"/>
        <SolidColorBrush x:Key="PtBrushBackgroundBlue" Color="{StaticResource PtColorBackgroundBlue}"/>

        <Color x:Key="PtColorBorderGrey" R="230" G="230" B="230" A="100"/>
        <SolidColorBrush x:Key="PtBrushBorderGrey" Color="{StaticResource PtColorBorderGrey}"/>

        <Color x:Key="PtColorLightGrey" R="240" G="240" B="240" A="150"/>
        <SolidColorBrush x:Key="PtBrushLightGrey" Color="{StaticResource PtColorLightGrey}"/>

        <!-- Greens -->
        <Color x:Key="PtColorGreen3" G="200" A="255"/>
        <SolidColorBrush x:Key="PtBrushGreen3" Color="{StaticResource PtColorGreen3}"/>
        
        <Color x:Key="PtColorGreen2" R="77" G="217" B="77" A="255"/>
        <SolidColorBrush x:Key="PtBrushGreen2" Color="{StaticResource PtColorGreen2}"/>

        <Color x:Key="PtColorGreen1" R="153" G="233" B="153" A="255"/>
        <SolidColorBrush x:Key="PtBrushGreen1" Color="{StaticResource PtColorGreen1}"/>

        <GradientStopCollection x:Key="PtGradientGreen">
            <GradientStop Color="{StaticResource PtColorGreen2}" Offset="0"/>
            <GradientStop Color="{StaticResource PtColorGreen3}" Offset="1"/>
        </GradientStopCollection>

        <!-- Reds -->
        <Color x:Key="PtColorRed3" R="255" A="255"/>
        <SolidColorBrush x:Key="PtBrushRed3" Color="{StaticResource PtColorRed3}"/>

        <Color x:Key="PtColorRed2" R="255" G="87" B="87" A="255"/>
        <SolidColorBrush x:Key="PtBrushRed2" Color="{StaticResource PtColorRed2}"/>

        <Color x:Key="PtColorRed1" R="255" G="171" B="171" A="255"/>
        <SolidColorBrush x:Key="PtBrushRed1" Color="{StaticResource PtColorRed1}"/>

        <GradientStopCollection x:Key="PtGradientRed">
            <GradientStop Color="{StaticResource PtColorRed2}" Offset="0"/>
            <GradientStop Color="{StaticResource PtColorRed3}" Offset="1"/>
        </GradientStopCollection>

        <!-- Golds -->
        <Color x:Key="PtColorGold3" R="255" G="215"  A="255"/>
        <SolidColorBrush x:Key="PtBrushGold3" Color="{StaticResource PtColorGold3}"/>

        <Color x:Key="PtColorGold2" R="255" G="227" B="77" A="255"/>
        <SolidColorBrush x:Key="PtBrushGold2" Color="{StaticResource PtColorGold2}"/>

        <Color x:Key="PtColorGold1" R="255" G="239" B="153" A="255"/>
        <SolidColorBrush x:Key="PtBrushGold1" Color="{StaticResource PtColorGold1}"/>

        <GradientStopCollection x:Key="PtGradientGold">
            <GradientStop Color="{StaticResource PtColorGold2}" Offset="0"/>
            <GradientStop Color="{StaticResource PtColorGold3}" Offset="1"/>
        </GradientStopCollection>

        <!-- Blues -->
        <Color x:Key="PtColorBlue3" R="50" G="55" B="255"  A="255"/>
        <SolidColorBrush x:Key="PtBrushBlue3" Color="{StaticResource PtColorBlue3}"/>

        <Color x:Key="PtColorBlue2" R="120" G="123" B="255" A="255"/>
        <SolidColorBrush x:Key="PtBrushBlue2" Color="{StaticResource PtColorBlue2}"/>

        <Color x:Key="PtColorBlue1" R="187" G="189" B="255" A="255"/>
        <SolidColorBrush x:Key="PtBrushBlue1" Color="{StaticResource PtColorBlue1}"/>

        <GradientStopCollection x:Key="PtGradientBlue">
            <GradientStop Color="{StaticResource PtColorBlue2}" Offset="0"/>
            <GradientStop Color="{StaticResource PtColorBlue3}" Offset="1"/>
        </GradientStopCollection>

        <!-- Purples -->
        <Color x:Key="PtColorPurple3" R="150" G="0" B="200"  A="255"/>
        <SolidColorBrush x:Key="PtBrushPurple3" Color="{StaticResource PtColorPurple3}"/>

        <Color x:Key="PtColorPurple2" R="182" G="77" B="217" A="255"/>
        <SolidColorBrush x:Key="PtBrushPurple2" Color="{StaticResource PtColorPurple2}"/>

        <Color x:Key="PtColorPurple1" R="213" G="153" B="233" A="255"/>
        <SolidColorBrush x:Key="PtBrushPurple1" Color="{StaticResource PtColorPurple1}"/>

        <GradientStopCollection x:Key="PtGradientPurple">
            <GradientStop Color="{StaticResource PtColorPurple2}" Offset="0"/>
            <GradientStop Color="{StaticResource PtColorPurple3}" Offset="1"/>
        </GradientStopCollection>

        <!-- Tooltips -->
        <ToolTip x:Key="EntitiesTip" Content="Entities are logical divisions of the business such as Companies, Legal Entities or Business Units"/>
        <ToolTip x:Key="LoginTip" Content="Functions relating to your ProjectTile login details"/>
        <ToolTip x:Key="StaffTip" Content="Staff includes ProjectTile users, and also other staff members who may work on projects"/>
        <ToolTip x:Key="ProductTip" Content="Products are the software packages used by clients, and implemented or amended via projects"/>
        <ToolTip x:Key="ClientTip" Content="Clients are software customers for (and with) whom projects are undertaken"/>
        
        <!-- Styles -->
        <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FFDDDDDD"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PtBrushHeaderBlue}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="Foreground" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TileStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FFDDDDDD"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="Foreground" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TileLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border CornerRadius="3" BorderBrush="{StaticResource PtBrushBorderGrey}" BorderThickness="1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TileLabelStyle2" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border CornerRadius="3" BorderBrush="{StaticResource PtBrushLightGrey}" BorderThickness="1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SectionBorder" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="CornerRadius" Value="3"/>
        </Style>

    </Application.Resources>
</Application>
