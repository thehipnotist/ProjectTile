//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectTile
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProjectTileSqlDatabase : DbContext
    {
        public ProjectTileSqlDatabase()
            : base("name=ProjectTileSqlDatabase")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AuditEntries> AuditEntries { get; set; }
        public virtual DbSet<ClientProducts> ClientProducts { get; set; }
        public virtual DbSet<Clients> Clients { get; set; }
        public virtual DbSet<ClientStaff> ClientStaff { get; set; }
        public virtual DbSet<ClientTeamRoles> ClientTeamRoles { get; set; }
        public virtual DbSet<ClientTeams> ClientTeams { get; set; }
        public virtual DbSet<Entities> Entities { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<ProjectProducts> ProjectProducts { get; set; }
        public virtual DbSet<ProjectRoles> ProjectRoles { get; set; }
        public virtual DbSet<Projects> Projects { get; set; }
        public virtual DbSet<ProjectStages> ProjectStages { get; set; }
        public virtual DbSet<ProjectTeams> ProjectTeams { get; set; }
        public virtual DbSet<ProjectTypes> ProjectTypes { get; set; }
        public virtual DbSet<Staff> Staff { get; set; }
        public virtual DbSet<StaffEntities> StaffEntities { get; set; }
        public virtual DbSet<StaffRoles> StaffRoles { get; set; }
        public virtual DbSet<TablePermissions> TablePermissions { get; set; }
        public virtual DbSet<vi_ClientStaff> vi_ClientStaff { get; set; }
        public virtual DbSet<vi_ClientsWithAccountManagers> vi_ClientsWithAccountManagers { get; set; }
        public virtual DbSet<vi_ClientsWithProducts> vi_ClientsWithProducts { get; set; }
        public virtual DbSet<vi_ClientTeams> vi_ClientTeams { get; set; }
        public virtual DbSet<vi_OpenProjectProducts> vi_OpenProjectProducts { get; set; }
        public virtual DbSet<vi_OpenProjects> vi_OpenProjects { get; set; }
        public virtual DbSet<vi_ProjectTeams> vi_ProjectTeams { get; set; }
        public virtual DbSet<vi_StaffEntities> vi_StaffEntities { get; set; }
        public virtual DbSet<vi_StaffWithRoles> vi_StaffWithRoles { get; set; }
        public virtual DbSet<ErrorLog> ErrorLog { get; set; }
    
        public virtual ObjectResult<cln_GetClientsByAccountManagerID_Result> cln_GetClientsByAccountManagerID(string accountManagerID)
        {
            var accountManagerIDParameter = accountManagerID != null ?
                new ObjectParameter("AccountManagerID", accountManagerID) :
                new ObjectParameter("AccountManagerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cln_GetClientsByAccountManagerID_Result>("cln_GetClientsByAccountManagerID", accountManagerIDParameter);
        }
    
        public virtual ObjectResult<cln_GetClientsByClientCode_Result> cln_GetClientsByClientCode(string clientCode)
        {
            var clientCodeParameter = clientCode != null ?
                new ObjectParameter("ClientCode", clientCode) :
                new ObjectParameter("ClientCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cln_GetClientsByClientCode_Result>("cln_GetClientsByClientCode", clientCodeParameter);
        }
    
        public virtual ObjectResult<cln_GetClientsByID_Result> cln_GetClientsByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cln_GetClientsByID_Result>("cln_GetClientsByID", iDParameter);
        }
    
        public virtual ObjectResult<cln_GetClientStaffByID_Result> cln_GetClientStaffByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cln_GetClientStaffByID_Result>("cln_GetClientStaffByID", iDParameter);
        }
    
        public virtual int cln_InsertIntoClientProducts(Nullable<int> clientID, Nullable<int> productID, Nullable<decimal> productVersion, Nullable<bool> live)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var productVersionParameter = productVersion.HasValue ?
                new ObjectParameter("ProductVersion", productVersion) :
                new ObjectParameter("ProductVersion", typeof(decimal));
    
            var liveParameter = live.HasValue ?
                new ObjectParameter("Live", live) :
                new ObjectParameter("Live", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cln_InsertIntoClientProducts", clientIDParameter, productIDParameter, productVersionParameter, liveParameter);
        }
    
        public virtual int cln_InsertIntoClients(Nullable<int> entityID, string clientCode, string clientName, Nullable<int> accountManagerID, Nullable<bool> active)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            var clientCodeParameter = clientCode != null ?
                new ObjectParameter("ClientCode", clientCode) :
                new ObjectParameter("ClientCode", typeof(string));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var accountManagerIDParameter = accountManagerID.HasValue ?
                new ObjectParameter("AccountManagerID", accountManagerID) :
                new ObjectParameter("AccountManagerID", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cln_InsertIntoClients", entityIDParameter, clientCodeParameter, clientNameParameter, accountManagerIDParameter, activeParameter);
        }
    
        public virtual int cln_InsertIntoClientStaff(Nullable<int> clientID, string firstName, string surname, string jobTitle, string phoneNumber, string email, Nullable<bool> active)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cln_InsertIntoClientStaff", clientIDParameter, firstNameParameter, surnameParameter, jobTitleParameter, phoneNumberParameter, emailParameter, activeParameter);
        }
    
        public virtual int cln_UpdateAccountManagerIDInClients(string iD, string accountManagerID)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var accountManagerIDParameter = accountManagerID != null ?
                new ObjectParameter("AccountManagerID", accountManagerID) :
                new ObjectParameter("AccountManagerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cln_UpdateAccountManagerIDInClients", iDParameter, accountManagerIDParameter);
        }
    
        public virtual int cln_UpdateActiveInClientStaff(string iD, string active)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cln_UpdateActiveInClientStaff", iDParameter, activeParameter);
        }
    
        public virtual int cln_UpdateClientNameInClients(string iD, string clientName)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cln_UpdateClientNameInClients", iDParameter, clientNameParameter);
        }
    
        public virtual int cln_UpdateJobTitleInClientStaff(string iD, string jobTitle)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cln_UpdateJobTitleInClientStaff", iDParameter, jobTitleParameter);
        }
    
        public virtual int cln_UpdateSurnameInClientStaff(string iD, string surname)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cln_UpdateSurnameInClientStaff", iDParameter, surnameParameter);
        }
    
        public virtual ObjectResult<ent_GetEntitiesByID_Result> ent_GetEntitiesByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ent_GetEntitiesByID_Result>("ent_GetEntitiesByID", iDParameter);
        }
    
        public virtual int ent_InsertIntoEntities(string entityName, string entityDescription)
        {
            var entityNameParameter = entityName != null ?
                new ObjectParameter("EntityName", entityName) :
                new ObjectParameter("EntityName", typeof(string));
    
            var entityDescriptionParameter = entityDescription != null ?
                new ObjectParameter("EntityDescription", entityDescription) :
                new ObjectParameter("EntityDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ent_InsertIntoEntities", entityNameParameter, entityDescriptionParameter);
        }
    
        public virtual int ent_UpdateEntityDescriptionInEntities(string iD, string entityDescription)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var entityDescriptionParameter = entityDescription != null ?
                new ObjectParameter("EntityDescription", entityDescription) :
                new ObjectParameter("EntityDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ent_UpdateEntityDescriptionInEntities", iDParameter, entityDescriptionParameter);
        }
    
        public virtual int ent_UpdateEntityNameInEntities(string iD, string entityName)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var entityNameParameter = entityName != null ?
                new ObjectParameter("EntityName", entityName) :
                new ObjectParameter("EntityName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ent_UpdateEntityNameInEntities", iDParameter, entityNameParameter);
        }
    
        public virtual ObjectResult<pja_GetClientTeamRolesByRoleCode_Result> pja_GetClientTeamRolesByRoleCode(string roleCode)
        {
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pja_GetClientTeamRolesByRoleCode_Result>("pja_GetClientTeamRolesByRoleCode", roleCodeParameter);
        }
    
        public virtual ObjectResult<pja_GetProjectRolesByRoleCode_Result> pja_GetProjectRolesByRoleCode(string roleCode)
        {
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pja_GetProjectRolesByRoleCode_Result>("pja_GetProjectRolesByRoleCode", roleCodeParameter);
        }
    
        public virtual ObjectResult<pja_GetProjectStagesByStageCode_Result> pja_GetProjectStagesByStageCode(string stageCode)
        {
            var stageCodeParameter = stageCode != null ?
                new ObjectParameter("StageCode", stageCode) :
                new ObjectParameter("StageCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pja_GetProjectStagesByStageCode_Result>("pja_GetProjectStagesByStageCode", stageCodeParameter);
        }
    
        public virtual int pja_InsertIntoClientTeamRoles(string roleCode, string roleDescription)
        {
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("RoleDescription", roleDescription) :
                new ObjectParameter("RoleDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pja_InsertIntoClientTeamRoles", roleCodeParameter, roleDescriptionParameter);
        }
    
        public virtual int pja_InsertIntoProjectRoles(string roleCode, string roleDescription)
        {
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("RoleDescription", roleDescription) :
                new ObjectParameter("RoleDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pja_InsertIntoProjectRoles", roleCodeParameter, roleDescriptionParameter);
        }
    
        public virtual int pja_InsertIntoProjectStages(Nullable<int> stageCode, string stageName, string stageDescription, string projectStatus)
        {
            var stageCodeParameter = stageCode.HasValue ?
                new ObjectParameter("StageCode", stageCode) :
                new ObjectParameter("StageCode", typeof(int));
    
            var stageNameParameter = stageName != null ?
                new ObjectParameter("StageName", stageName) :
                new ObjectParameter("StageName", typeof(string));
    
            var stageDescriptionParameter = stageDescription != null ?
                new ObjectParameter("StageDescription", stageDescription) :
                new ObjectParameter("StageDescription", typeof(string));
    
            var projectStatusParameter = projectStatus != null ?
                new ObjectParameter("ProjectStatus", projectStatus) :
                new ObjectParameter("ProjectStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pja_InsertIntoProjectStages", stageCodeParameter, stageNameParameter, stageDescriptionParameter, projectStatusParameter);
        }
    
        public virtual int pja_InsertIntoProjectTypes(string typeCode, string typeName, string typeDescription)
        {
            var typeCodeParameter = typeCode != null ?
                new ObjectParameter("TypeCode", typeCode) :
                new ObjectParameter("TypeCode", typeof(string));
    
            var typeNameParameter = typeName != null ?
                new ObjectParameter("TypeName", typeName) :
                new ObjectParameter("TypeName", typeof(string));
    
            var typeDescriptionParameter = typeDescription != null ?
                new ObjectParameter("TypeDescription", typeDescription) :
                new ObjectParameter("TypeDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pja_InsertIntoProjectTypes", typeCodeParameter, typeNameParameter, typeDescriptionParameter);
        }
    
        public virtual int pja_UpdateRoleDescriptionInClientTeamRoles(string roleCode, string roleDescription)
        {
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("RoleDescription", roleDescription) :
                new ObjectParameter("RoleDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pja_UpdateRoleDescriptionInClientTeamRoles", roleCodeParameter, roleDescriptionParameter);
        }
    
        public virtual int pja_UpdateRoleDescriptionInProjectRoles(string roleCode, string roleDescription)
        {
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("RoleDescription", roleDescription) :
                new ObjectParameter("RoleDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pja_UpdateRoleDescriptionInProjectRoles", roleCodeParameter, roleDescriptionParameter);
        }
    
        public virtual int pja_UpdateStageDescriptionInProjectStages(string stageCode, string stageDescription)
        {
            var stageCodeParameter = stageCode != null ?
                new ObjectParameter("StageCode", stageCode) :
                new ObjectParameter("StageCode", typeof(string));
    
            var stageDescriptionParameter = stageDescription != null ?
                new ObjectParameter("StageDescription", stageDescription) :
                new ObjectParameter("StageDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pja_UpdateStageDescriptionInProjectStages", stageCodeParameter, stageDescriptionParameter);
        }
    
        public virtual int pja_UpdateTypeDescriptionInProjectTypes(string typeName, string typeDescription)
        {
            var typeNameParameter = typeName != null ?
                new ObjectParameter("TypeName", typeName) :
                new ObjectParameter("TypeName", typeof(string));
    
            var typeDescriptionParameter = typeDescription != null ?
                new ObjectParameter("TypeDescription", typeDescription) :
                new ObjectParameter("TypeDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pja_UpdateTypeDescriptionInProjectTypes", typeNameParameter, typeDescriptionParameter);
        }
    
        public virtual int pja_UpdateTypeNameInProjectTypes(string typeCode, string typeName)
        {
            var typeCodeParameter = typeCode != null ?
                new ObjectParameter("TypeCode", typeCode) :
                new ObjectParameter("TypeCode", typeof(string));
    
            var typeNameParameter = typeName != null ?
                new ObjectParameter("TypeName", typeName) :
                new ObjectParameter("TypeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pja_UpdateTypeNameInProjectTypes", typeCodeParameter, typeNameParameter);
        }
    
        public virtual ObjectResult<prd_GetProductsByID_Result> prd_GetProductsByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prd_GetProductsByID_Result>("prd_GetProductsByID", iDParameter);
        }
    
        public virtual ObjectResult<prd_GetProductsByProductName_Result> prd_GetProductsByProductName(string productName)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prd_GetProductsByProductName_Result>("prd_GetProductsByProductName", productNameParameter);
        }
    
        public virtual int prd_InsertIntoProducts(string productName, Nullable<decimal> latestVersion, string productDescription)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var latestVersionParameter = latestVersion.HasValue ?
                new ObjectParameter("LatestVersion", latestVersion) :
                new ObjectParameter("LatestVersion", typeof(decimal));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prd_InsertIntoProducts", productNameParameter, latestVersionParameter, productDescriptionParameter);
        }
    
        public virtual int prd_UpdateLatestVersionInProducts(string iD, string latestVersion)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var latestVersionParameter = latestVersion != null ?
                new ObjectParameter("LatestVersion", latestVersion) :
                new ObjectParameter("LatestVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prd_UpdateLatestVersionInProducts", iDParameter, latestVersionParameter);
        }
    
        public virtual ObjectResult<prj_GetClientTeamsByID_Result> prj_GetClientTeamsByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prj_GetClientTeamsByID_Result>("prj_GetClientTeamsByID", iDParameter);
        }
    
        public virtual int prj_GetNewVersionByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_GetNewVersionByID", iDParameter);
        }
    
        public virtual int prj_GetOldVersionByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_GetOldVersionByID", iDParameter);
        }
    
        public virtual ObjectResult<prj_GetProjectsByID_Result> prj_GetProjectsByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prj_GetProjectsByID_Result>("prj_GetProjectsByID", iDParameter);
        }
    
        public virtual ObjectResult<prj_GetProjectTeamsByID_Result> prj_GetProjectTeamsByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prj_GetProjectTeamsByID_Result>("prj_GetProjectTeamsByID", iDParameter);
        }
    
        public virtual int prj_InsertIntoClientTeams(Nullable<int> projectID, Nullable<int> clientStaffID, string clientTeamRoleCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var clientStaffIDParameter = clientStaffID.HasValue ?
                new ObjectParameter("ClientStaffID", clientStaffID) :
                new ObjectParameter("ClientStaffID", typeof(int));
    
            var clientTeamRoleCodeParameter = clientTeamRoleCode != null ?
                new ObjectParameter("ClientTeamRoleCode", clientTeamRoleCode) :
                new ObjectParameter("ClientTeamRoleCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_InsertIntoClientTeams", projectIDParameter, clientStaffIDParameter, clientTeamRoleCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int prj_InsertIntoProjectProducts(Nullable<int> projectID, Nullable<int> productID, Nullable<decimal> oldVersion, Nullable<decimal> newVersion)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var oldVersionParameter = oldVersion.HasValue ?
                new ObjectParameter("OldVersion", oldVersion) :
                new ObjectParameter("OldVersion", typeof(decimal));
    
            var newVersionParameter = newVersion.HasValue ?
                new ObjectParameter("NewVersion", newVersion) :
                new ObjectParameter("NewVersion", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_InsertIntoProjectProducts", projectIDParameter, productIDParameter, oldVersionParameter, newVersionParameter);
        }
    
        public virtual int prj_InsertIntoProjects(Nullable<int> entityID, string typeCode, string projectName, Nullable<int> clientID, Nullable<System.DateTime> startDate, Nullable<int> stageCode, string projectSummary)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            var typeCodeParameter = typeCode != null ?
                new ObjectParameter("TypeCode", typeCode) :
                new ObjectParameter("TypeCode", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var stageCodeParameter = stageCode.HasValue ?
                new ObjectParameter("StageCode", stageCode) :
                new ObjectParameter("StageCode", typeof(int));
    
            var projectSummaryParameter = projectSummary != null ?
                new ObjectParameter("ProjectSummary", projectSummary) :
                new ObjectParameter("ProjectSummary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_InsertIntoProjects", entityIDParameter, typeCodeParameter, projectNameParameter, clientIDParameter, startDateParameter, stageCodeParameter, projectSummaryParameter);
        }
    
        public virtual int prj_InsertIntoProjectTeams(Nullable<int> projectID, Nullable<int> staffID, string projectRoleCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var projectRoleCodeParameter = projectRoleCode != null ?
                new ObjectParameter("ProjectRoleCode", projectRoleCode) :
                new ObjectParameter("ProjectRoleCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_InsertIntoProjectTeams", projectIDParameter, staffIDParameter, projectRoleCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int prj_UpdateClientStaffIDInClientTeams(string iD, string clientStaffID)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var clientStaffIDParameter = clientStaffID != null ?
                new ObjectParameter("ClientStaffID", clientStaffID) :
                new ObjectParameter("ClientStaffID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_UpdateClientStaffIDInClientTeams", iDParameter, clientStaffIDParameter);
        }
    
        public virtual int prj_UpdateClientTeamRoleCodeInClientTeams(string iD, string clientTeamRoleCode)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var clientTeamRoleCodeParameter = clientTeamRoleCode != null ?
                new ObjectParameter("ClientTeamRoleCode", clientTeamRoleCode) :
                new ObjectParameter("ClientTeamRoleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_UpdateClientTeamRoleCodeInClientTeams", iDParameter, clientTeamRoleCodeParameter);
        }
    
        public virtual int prj_UpdateNewVersionInProjectProducts(string iD, string newVersion)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var newVersionParameter = newVersion != null ?
                new ObjectParameter("NewVersion", newVersion) :
                new ObjectParameter("NewVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_UpdateNewVersionInProjectProducts", iDParameter, newVersionParameter);
        }
    
        public virtual int prj_UpdateOldVersionInProjectProducts(string iD, string oldVersion)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var oldVersionParameter = oldVersion != null ?
                new ObjectParameter("OldVersion", oldVersion) :
                new ObjectParameter("OldVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_UpdateOldVersionInProjectProducts", iDParameter, oldVersionParameter);
        }
    
        public virtual int prj_UpdateProjectNameInProjects(string iD, string projectName)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_UpdateProjectNameInProjects", iDParameter, projectNameParameter);
        }
    
        public virtual int prj_UpdateProjectRoleCodeInProjectTeams(string iD, string projectRoleCode)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var projectRoleCodeParameter = projectRoleCode != null ?
                new ObjectParameter("ProjectRoleCode", projectRoleCode) :
                new ObjectParameter("ProjectRoleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_UpdateProjectRoleCodeInProjectTeams", iDParameter, projectRoleCodeParameter);
        }
    
        public virtual int prj_UpdateProjectSummaryInProjects(string iD, string projectSummary)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var projectSummaryParameter = projectSummary != null ?
                new ObjectParameter("ProjectSummary", projectSummary) :
                new ObjectParameter("ProjectSummary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_UpdateProjectSummaryInProjects", iDParameter, projectSummaryParameter);
        }
    
        public virtual int prj_UpdateStaffIDInProjectTeams(string iD, string staffID)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var staffIDParameter = staffID != null ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_UpdateStaffIDInProjectTeams", iDParameter, staffIDParameter);
        }
    
        public virtual int prj_UpdateToDateInClientTeams(string iD, string toDate)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_UpdateToDateInClientTeams", iDParameter, toDateParameter);
        }
    
        public virtual int prj_UpdateToDateInProjectTeams(string iD, string toDate)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prj_UpdateToDateInProjectTeams", iDParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sec_GetTablePermissionsByID_Result> sec_GetTablePermissionsByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sec_GetTablePermissionsByID_Result>("sec_GetTablePermissionsByID", iDParameter);
        }
    
        public virtual int sec_InsertIntoTablePermissions(string tableName, string roleCode, Nullable<bool> viewTable, Nullable<bool> updateRows, Nullable<bool> insertRows, Nullable<bool> changeStatus)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            var viewTableParameter = viewTable.HasValue ?
                new ObjectParameter("ViewTable", viewTable) :
                new ObjectParameter("ViewTable", typeof(bool));
    
            var updateRowsParameter = updateRows.HasValue ?
                new ObjectParameter("UpdateRows", updateRows) :
                new ObjectParameter("UpdateRows", typeof(bool));
    
            var insertRowsParameter = insertRows.HasValue ?
                new ObjectParameter("InsertRows", insertRows) :
                new ObjectParameter("InsertRows", typeof(bool));
    
            var changeStatusParameter = changeStatus.HasValue ?
                new ObjectParameter("ChangeStatus", changeStatus) :
                new ObjectParameter("ChangeStatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sec_InsertIntoTablePermissions", tableNameParameter, roleCodeParameter, viewTableParameter, updateRowsParameter, insertRowsParameter, changeStatusParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> stf_CheckHashedPassword(string userID, string passwd)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var passwdParameter = passwd != null ?
                new ObjectParameter("Passwd", passwd) :
                new ObjectParameter("Passwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("stf_CheckHashedPassword", userIDParameter, passwdParameter);
        }
    
        public virtual ObjectResult<stf_GetStaffByID_Result> stf_GetStaffByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stf_GetStaffByID_Result>("stf_GetStaffByID", iDParameter);
        }
    
        public virtual ObjectResult<stf_GetStaffByRoleCode_Result> stf_GetStaffByRoleCode(string roleCode)
        {
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stf_GetStaffByRoleCode_Result>("stf_GetStaffByRoleCode", roleCodeParameter);
        }
    
        public virtual ObjectResult<stf_GetStaffRolesByRoleCode_Result> stf_GetStaffRolesByRoleCode(string roleCode)
        {
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stf_GetStaffRolesByRoleCode_Result>("stf_GetStaffRolesByRoleCode", roleCodeParameter);
        }
    
        public virtual int stf_InsertIntoStaff(string firstName, string surname, string roleCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> leaveDate, string userID, string passwd, byte[] passwordHash, Nullable<bool> active, Nullable<int> defaultEntity)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var leaveDateParameter = leaveDate.HasValue ?
                new ObjectParameter("LeaveDate", leaveDate) :
                new ObjectParameter("LeaveDate", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var passwdParameter = passwd != null ?
                new ObjectParameter("Passwd", passwd) :
                new ObjectParameter("Passwd", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(byte[]));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var defaultEntityParameter = defaultEntity.HasValue ?
                new ObjectParameter("DefaultEntity", defaultEntity) :
                new ObjectParameter("DefaultEntity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stf_InsertIntoStaff", firstNameParameter, surnameParameter, roleCodeParameter, startDateParameter, leaveDateParameter, userIDParameter, passwdParameter, passwordHashParameter, activeParameter, defaultEntityParameter);
        }
    
        public virtual int stf_InsertIntoStaffEntities(Nullable<int> staffID, Nullable<int> entityID)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stf_InsertIntoStaffEntities", staffIDParameter, entityIDParameter);
        }
    
        public virtual int stf_InsertIntoStaffRoles(string roleCode, string roleDescription)
        {
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("RoleDescription", roleDescription) :
                new ObjectParameter("RoleDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stf_InsertIntoStaffRoles", roleCodeParameter, roleDescriptionParameter);
        }
    
        public virtual int stf_UpdateLeaveDateInStaff(string iD, string leaveDate)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var leaveDateParameter = leaveDate != null ?
                new ObjectParameter("LeaveDate", leaveDate) :
                new ObjectParameter("LeaveDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stf_UpdateLeaveDateInStaff", iDParameter, leaveDateParameter);
        }
    
        public virtual int stf_UpdateRoleCodeInStaff(string iD, string roleCode)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stf_UpdateRoleCodeInStaff", iDParameter, roleCodeParameter);
        }
    
        public virtual int stf_UpdateRoleDescriptionInStaffRoles(string roleCode, string roleDescription)
        {
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("RoleDescription", roleDescription) :
                new ObjectParameter("RoleDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stf_UpdateRoleDescriptionInStaffRoles", roleCodeParameter, roleDescriptionParameter);
        }
    
        public virtual ObjectResult<err_GetErrorLogByID_Result> err_GetErrorLogByID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<err_GetErrorLogByID_Result>("err_GetErrorLogByID", iDParameter);
        }
    
        public virtual int err_InsertIntoErrorLog(string customMessage, string exceptionMessage, string exceptionType, string targetSite, Nullable<System.DateTime> loggedAt, string loggedBy, string innerException)
        {
            var customMessageParameter = customMessage != null ?
                new ObjectParameter("CustomMessage", customMessage) :
                new ObjectParameter("CustomMessage", typeof(string));
    
            var exceptionMessageParameter = exceptionMessage != null ?
                new ObjectParameter("ExceptionMessage", exceptionMessage) :
                new ObjectParameter("ExceptionMessage", typeof(string));
    
            var exceptionTypeParameter = exceptionType != null ?
                new ObjectParameter("ExceptionType", exceptionType) :
                new ObjectParameter("ExceptionType", typeof(string));
    
            var targetSiteParameter = targetSite != null ?
                new ObjectParameter("TargetSite", targetSite) :
                new ObjectParameter("TargetSite", typeof(string));
    
            var loggedAtParameter = loggedAt.HasValue ?
                new ObjectParameter("LoggedAt", loggedAt) :
                new ObjectParameter("LoggedAt", typeof(System.DateTime));
    
            var loggedByParameter = loggedBy != null ?
                new ObjectParameter("LoggedBy", loggedBy) :
                new ObjectParameter("LoggedBy", typeof(string));
    
            var innerExceptionParameter = innerException != null ?
                new ObjectParameter("InnerException", innerException) :
                new ObjectParameter("InnerException", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("err_InsertIntoErrorLog", customMessageParameter, exceptionMessageParameter, exceptionTypeParameter, targetSiteParameter, loggedAtParameter, loggedByParameter, innerExceptionParameter);
        }
    }
}
